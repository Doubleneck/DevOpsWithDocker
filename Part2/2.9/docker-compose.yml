version: '3.8'

services:
    backend:
      build: ./example-backend
      restart: unless-stopped
      ports:
        - 127.0.0.1:8080:8080
      environment:
        - REDIS_HOST=redis
        - POSTGRES_HOST=postgres
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=example
        - POSTGRES_DATABASE=postgres
      container_name: backend
      depends_on:
        - db

    frontend:
      build: ./example-frontend
      ports:
        - 127.0.0.1:5000:5000
      container_name: frontend
      depends_on:
        - backend

    redis:
      image: redis

    db:
      image: postgres:13.2-alpine
      restart: unless-stopped
      environment:
        POSTGRES_PASSWORD: example
      volumes:
        - ./database:/var/lib/postgresql/data
      container_name: postgres

    adminer:
      image: adminer:4
      restart: unless-stopped
      environment:
        - ADMINER_DESIGN=galkaev
      ports:
        - 127.0.0.1:8083:8080

    nginx:
      image: nginx
      volumes:
        - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      ports:
        - 127.0.0.1:80:80
      container_name: nginx
      depends_on:
        - backend
        - frontend
